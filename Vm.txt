					|-------Born2beRoot-------|
						THIS IS FOR DEBIAN
1 Part:		VM Creation 
1- Go to https://www.debian.org/CD/netinst/  and get this version amd64
2- open oracle
3- Select New
4- write the name that you want
5- Machine folder - your VM must be created in goinfre/VirtualBox VMs(you have to creat the VirtualBox VMs)
6- Type - Linux
7- Version - Debian(64-bit)
8- RAM - 1024
9- Hard disk - Create a virtual hard disk now
10- Hard disk file type - VDI
11- Storage on physical hard disk - fixe size
12- File location and size - your location must be this /goinfre/VirtualBox VMs/nameofyourvm/nameofyourvm.vdi
	size i left 8GB
13- Select settings -> Storage -> Empty after look to Attributes and select the tiny disk and put the version you downloaded before all this
14- Press ok and start your VM

2 Part:	VM Installation
1- Select Install
2- Language -> English
3- Location -> other -> Portugal
4- locales -> US(their isn't lisbon or london)
5- Keyboard -> American English
6- Just wait
7- Network -> must write your user that you use to login on intra and at the end 42(Ex: myuser42)
8- Domain leave empty
9- write a decent pass!!!(if you want to see waht you wrote use space to select the show password)
10- write your pass again
11- user you can pust you intra login
12- Username -> i put my intra login
13- Again a decent pass!!
14- write the pass again
15- Time zone -> Lisbon
16- wait a bit
17 - On this part you have 2 options 
	First - you can do likethis -> Guided - Use entire disk and set up encrypted LVM ->
-> SCSIX (0,0,0) (sda) - 8.6 GB ATA VBOX HARDDISK -> separate /home partition ->
-> yes. Wait.
Enter encryption passphrase twice -> 8.1G or just max ->
-> Finish partitioning and write changes to disk -> yes. Wait.(this is without bonus)

	Second - Bonus you have to create the partition manualy if you want the bonus do this now its easier
For bonus - Select manual
		  - SCSI1 (0,0,0) (sda) - 8.6 GB ATA VBOX HARDDISK
		  - yes
		  - pri/log 8.6 GB FREE SPACE
		  - Create a new partition (CRANP next)
		  - 500M 
		  - Primary
		  - Beginning
		  - Mount point
		  - Boot
		  - Done setting up the partition(DSUP)
		  - pri/log
		  - CRANP
		  - 8.1 GB or max
		  - logical
		  - Mount point select Do not mount it
		  - DSUP
		  - Configure encrypted volumes
		  - yes
		  - Create encrypted volumes
		  - select /dev/sda5
		  - Done setting up the partition (DSUTP)
		  - Finish 
		  - yes
		  - wait
		  - Enter the disk pass twice
		  - Configure the logical volume manager
		  - yes
		  - Create volume groupe
		  - LVMGroup
		  - Select /dev/mapper/sda5_crypt
		  - Continue
		  - Create logical volume (CLV)
		  - LVMGroup
		  - root
		  - 2G
		  - CLV
		  - swap
		  - 1G
		  - CLV
		  - LVMGroup
		  - home
		  - 1G
		  - CLV
		  - LVMGroup
		  - var 
		  - 1G
		  - CLV
		  - LVMGroup
		  - srv
		  - 1G 
		  - CLV
		  - LVMGroup
		  - tmp
		  - 1G 
		  - CLV
		  - LVMGroup 
		  - var-log
		  - the rest of the space
		  - Finish
		  - Now its time to give each partition their job
		  - select the first 998.2(under home)
		  - Use as (UA)
		  - EXT4 jfl
		  - Mount point: /home
		  - DSUP
		  - under root 
		  - UA 
		  - EXT4
		  - MU -> /
		  - DSUP
		  - under srv
		  - UA
		  - EXT4
		  - MP -> /srv
		  - DSUP
		  - under swap
		  - UA 
		  - swap area
		  - DSUP
		  - under tmp 
		  - UA 
		  - EXT4
		  - MU -> /tmp 
		  - DSUP
		  - under var 
		  - UA 
		  - EXT4 
		  - MU -> /var
		  - under var-log
		  - UA
		  - EXT4
		  - MU -> manually -> /var/log 
		  - DSUP
		  - Finish partitioning and write changes to disk
		  - yes
		  - And now just chill
		  - Configure the package manager -> no
		  - Select where your campus is located
		  - deb.debian.org (doesn't matter)
		  - Leave proxy info field empty and proceed
		  - Participate in the package usage survey? -> NO!
		  - Soft seclection: remove stars from ssh/standart system utilities/etc. (space)
			GRUB - YES! -> /dev/sda
			Installlation complee -> continue

3 part: Sudo Installation
1- After you log in, write this su - 
2- when you in root write this apt install sudo
3- then reboot and log in again

4 part: Adding users
1- write su -
2- while in root write usermod -aG sudo yourusername
	 -a is a shortcut for --append: It means append the group to the list of groups the user belongs to!
	 -G is a shortcut for --groups: It tells usermod that the next argument is a group. 
	  Note that you need to use a capital -G here because we don’t want to modify the user’s primary group but the list of supplemental groups the user belongs to.
3- check if user is in sudo group getent group sudo
4- Add group user42 -> groupadd user42
5- Add user to group user42 -> usermod -aG user42 yourusername

5 part: Installing ssh
1- write exit so you leave su -
2- sudo apt install openssh-server
3- this is to check if ssh service is running sudo systemctl status ssh
4- go to /etc/ssh, sudo nano sshd_config and edit #Port22 to Port4242 and 
	#PermitRootLogin prohibit-password to PermitRootLogin no, save and exit
5- sudo nano /etc/ssh/ssh_config -> etid #Port22 to Port4242
6- sudo service ssh status
8- Install UFW(Unsophisticade firewall) -> sudo apt install ufw
9- sudo ufw enable
10- sudo ufw allow 4242
11- sudo service ssh restart
12- sudo ufw status(it can only be port 4242 their)

6 part: Configuring sudo
1- cd /etc/sudoers.d/
2- sudo visudo
	Defaults      passwd_tries=3                            
	Defaults      badpass_message="Incorrect password"        <- you can set your
	Defaults      logfile="/var/log/sudo/sudo.log"                         own message here
	Defaults      log_input, log_output                 
	Defaults      requiretty                                
	Defaults      secure_path="that/long/paths/from/subject"

7 part: Strong Password policy
1- sudo apt install libpam-pwquality
2- sudo nano /etc/login.defs
	PASS_MAX_DAYS    99999 -> PASS_MAX_DAYS    30 
	PASS_MIN_DAYS    0     -> PASS_MIN_DAYS    2
3- sudo nano /etc/pam.d/common-password
	Find password requisite pam_quality.so retry=3 and write this 
	ucredit=-1(this means you need at least on upper-case letter in pw)
	lcredit=-1(this means you need at least one lower-case in pw)
	dcredit=-1(this means you need at least one digit i pw)
	minlen=10(minimum length of pw)
	maxrepeat=3(this means you have a max of consecutive identical chars in pw)
	usercheck=0(this means if password contains the username)
	difok=7(this means you are going to set a minimum number of chars thas has to do be different from the old pw)
	enforce_for_root(this means you need to reboot after changing pw)
5- reboot VM - sudo reboot
6- change password for user -> passwd
7- change password for root -> sudo password

8 part: Conecting to VM
1- Go to oracle
2- Choose your VM
3- Go to settings
4- Choose Network
5- Select Adapter 1
6- In Attached to: change to Bridged Adapter
7- sudo reboot
8- hostname -I (so you can see the ip off your VM)
9- Go to your terminal on your physical computer
	write this (anywhere) ssh -p 4242 yourusernameonthevm@theipofyourvm and you should see
	a message asking for fingerprint just write "yes" and then you are connected
9 part: Scrip
1- Install net-tools - sudo apt install net-tools
2- this is where the script will be sudo nano /usr/local/bin/monitoring.sh 
3- Every script starts with #!/bin/bash
	wall is a command-line that displays a message on the terminal of all loged-in users.
	the message can be in terminal on the contents of a file
	The command uname -a is used to get the architecture, uname us used to print certain system information including kernel name, and the -a or all prints all information
	The command grep is a tool used to search for a string of characters in a specified file
4- arch=$(uname -a)
	phyproc=$(grep "physical id" /proc/cpuinfo | sort | uniq | wc -l)
	virtproc=$(grep "processor" /proc/cpuinfo  | wc -l)
	ram_free=$(free -m | grep Mem | awk '{print $4}') (to see free RAM use free -m th -m flag makes the output in MB)
	We only want the Mem row so we use grep Mem, what we want is on the 4th column, so to represent that we use $4 and to show the value we use awk '{print $4}'
	What akw is?
	Awk is a scripting language used for manipulating data and generating reports. The awk command programming language requires no compiling and allows the user to use variables, numeric functions, string functions, and logical operators. 
	Awk is a utility that enables a programmer to write tiny but effective programs in the form of statements that define text patterns that are to be searched for in each line of a document and the action that is to be taken when a match is found within a line. Awk is mostly used for pattern scanning and processing. It searches one or more files to see if they contain lines that matches with the specified 
	patterns and then perform the associated actions. 

	Awk is abbreviated from the names of the developers – Aho, Weinberger, and Kernighan. 
	total_ram=$(free -m | grep Mem | awk '{print $2}')
	ram_usage_percent=$(free -m | grep Mem | | awk '{printf("%.2f", $3/$2*100}')
	
	Disk free
	To see the disk space run the command "df", to show MB use the flag "-m" and to see in GB
	use 2 flags "-Bg".
	What we want it starts with "/dev/ so to get only those lines we use " grep '^/dev/', "^" this means where the 
	beginning of the line starts. 
	those partition(lines) are out home, boot and dev, but we cant acess the boot partition because you can add or delete
	anything of that. so to take the line that we want use "grep -v '/boot$'", "-v" is flag to deselect the line and de "$"
	is to select the end off the line, so we are saying to take out the line that ends with boot.
	So we nee to print a sum of 3 lines to do i have a variable called (fdisk) on this variable im going to add
	the lines of the same column "awk '{fdisk += $4} to get the result we need to add "awk END {print fdisk}.
	The resusl is this "df -Bm | grep '^/dev/' | grep -v '/boot$' | awk '{fdisk += $4} END {print fdisk}'"

	To get the total disk space its almost the same :
	"df -Bg | grep '^/dev/' |grep -v '/boot$' | awk '{tdisk += $2} END {print tdisk}'"

	For the disk usage :
	"df -Bm | grep '^/dev/' | grep -v '/boot$' | awk '{fdisk += $3} {tdisk += $2} END 
	{printf("%.2f"), fdisk/tdisk*100}'"

	CPU load :
	To get the CPU usage the command "top" gives us the cpu % and using the flag "-b"
	to start in batch mode, use the flag -n to specify the max number to show
	If you execute the command top he will show alot of lines so lets get the one we want by using
	"grep '^%Cpu' and the values are in the column $2
	the result is this 
	"top -bn1 | grep '^$Cpu' | awk '{printf("%.2f%%"), $2}'"

	Last reboot :
	To this one we use the command "who" this command prints out the information about users who
	are currently logged in and the flage "-b" shows the time of the last system boot.
	The information that we want are in column $3 and $4, we need to print both columns so just put " "
	between them.
	the result is this
	"who -b | awk '{print $3 " " $4}'"

	LVM active
	To check if LVM is active run the command "lsblk" and just get the lvm part by using "grep lvm" 
	we just need the column $1
	the result is this 
	"lsblk | grep lvm | awk '{if ($1) {print "yes";exit;} else {print "no";exit}}'"

	Number of connections
	To check how many connections are active to your server use command "ss" to display all the information
	and the flag -t to just see the tcp connections, to see the active connections use "grep ESTAB" and 
	to print the nu,ber of line use "wc" it will print a newline, word and byte counts for file and the flag
	"-l" just prits a newline
	the result is this 
	"ss -t | grep ESTAB | wc -l 

	Number of users connected
	To check how many users are connected use command "who" and cut until you find the first space
	using "cut -d " "" , the flag "-d" is delimiter instead of TAB for field delimite, after use flag 
	"-f" sot get only these and add 1
	Use the command sort with the flage "-u" to output the first time its run and then doesnt repeat
	count the number of line by using "wc -l"
	the result is 
	"who | cut -d " " -f 1 | sort -u | wc -l"

	IPv4 & MAC(Media Access Control)
	to see the ip just use hostname -I 
	For the MAC we can use "ip" to show/ ,amipulate routing , networks devices
	interfaces and tunnels, command "link show" shows the network device,
	The lines we want are the one that have ether, use "grep ether" to get MAC we just need the column $2
	
	



